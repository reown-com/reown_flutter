# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: ci
permissions:
  contents: read

on:
  # push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ develop ]
  workflow_dispatch:
    inputs:
      integration:
        description: 'Run integration tests?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      maestro:
        description: 'Run maestro tests?'
        required: false
        default: 'android'
        type: choice
        options:
          - 'android'
          - 'ios'
          - 'both'
          - 'none'

concurrency:
  # Support push/pr as event types with different behaviors each:
  # 1. push: queue up builds by branch
  # 2. pr: only allow one run per PR
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref_name }}
  # If there is already a workflow running for the same pull request, cancel it
  # For non-PR triggers queue up builds
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  tests:
    runs-on: ubuntu-16core

    steps:
      # Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up environment 
      - uses: ./.github/actions/dependencies
      
      # Add Secrets file on dapp
      - name: Add Secrets file to AppKit
        working-directory: packages/reown_appkit/example/base/android
        run: touch secrets.properties && echo "${{ secrets.SECRETS_FILE }}" >> secrets.properties

      # Add Keystore file on dapp
      - name: Add Keystore file to AppKit
        working-directory: packages/reown_appkit/example/base/android
        run: echo "${{ secrets.KEYSTORE }}" | base64 --decode >> app/debug.keystore

      # Add Secrets file on wallet
      - name: Add Secrets file to WalletKit
        working-directory: packages/reown_walletkit/example/android
        run: touch secrets.properties && echo "${{ secrets.SECRETS_FILE }}" >> secrets.properties

      # Add Keystore file on wallet
      - name: Add Keystore file to WalletKit
        working-directory: packages/reown_walletkit/example/android
        run: echo "${{ secrets.KEYSTORE }}" | base64 --decode >> app/debug.keystore

      # Run Integration Tests
      - name: Run Integration Tests
        if: github.event.inputs.integration == 'true'
        uses: ./.github/actions/ci
        with:
          type: "integration-tests"
          relay-endpoint: "wss://relay.walletconnect.org"
          project-id: ${{ secrets.DAPP_PROJECT_ID }}
          wallet-project-id: ${{ secrets.WALLET_PROJECT_ID }}

      # Run Maestro Tests
      - name: Run Maestro Tests
        if: github.event.inputs.maestro != 'none'
        uses: ./.github/actions/ci
        with:
          type: "maestro-tests"
          platform: ${{ github.event.inputs.maestro }}
          relay-endpoint: "wss://relay.walletconnect.org"
          project-id: ${{ secrets.DAPP_PROJECT_ID }}
          wallet-project-id: ${{ secrets.WALLET_PROJECT_ID }}

# Launch locally
# act --container-architecture linux/amd64 -P ubuntu-latest=-self-hosted --secret-file .github/workflows/.env.secret -W .github/workflows/ci.yml workflow_dispatch --input integration=false --input maestro=android
