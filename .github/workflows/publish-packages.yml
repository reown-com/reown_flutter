name: Publish Reown Flutter Packages

on:
  workflow_dispatch: # Allows manual triggering
    inputs:
      core:
        description: 'Publish Core?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      sign:
        description: 'Publish Sign?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      appkit:
        description: 'Publish AppKit?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      walletkit:
        description: 'Publish WalletKit?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      cli:
        description: 'Publish CLI?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      yttrium:
        description: 'Publish Yttrium?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  contents: write # Required to commit pubspec.yaml changes back to the repo

jobs:
  publish-core:
    name: Publish reown_core
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Check if core should be published
        if: github.event.inputs.core == 'false'
        run: |
          echo "Skipping reown_core publishing because input was false."
        continue-on-error: false

      - name: Checkout code
        if: github.event.inputs.core == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for git push

      - name: Set up Flutter
        if: github.event.inputs.core == 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'

      - name: Install yq
        if: github.event.inputs.core == 'true'
        run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Get package version from reown_core/pubspec.yaml
        if: github.event.inputs.core == 'true'
        id: get_version
        working-directory: packages/reown_core
        run: echo "version=$(yq e '.version' pubspec.yaml)" >> $GITHUB_OUTPUT

      - name: Configure pub.dev credentials
        if: github.event.inputs.core == 'true'
        run: |
          mkdir -p $HOME/.config/dart
          echo '${{ secrets.PUB_CREDENTIALS }}' > $HOME/.config/dart/pub-credentials.json

      - name: Run generate_files.sh for reown_core
        if: github.event.inputs.core == 'true'
        working-directory: packages/reown_core
        run: |
          chmod +x generate_files.sh
          sh ./generate_files.sh
      
      - name: Check Publish Warnings
        if: github.event.inputs.core == 'true'
        shell: bash
        run: |
          set -o pipefail

          OUTPUT=$(flutter pub publish --dry-run 2>&1 || true)
          echo "$OUTPUT"

          if echo "$OUTPUT" | grep -iE "^Error:|validation.*error|validation.*failed"; then
            echo "❌ Real error(s) detected in pub publish dry-run"
            exit 1
          else
            echo "✅ No real errors, only warnings (e.g. missing CHANGELOG.md)"
          fi

      - name: Publish reown_core to pub.dev
        if: github.event.inputs.core == 'true'
        working-directory: packages/reown_core
        run: flutter pub publish --force

      - name: Wait for reown_core to be available on pub.dev
        if: github.event.inputs.core == 'true'
        run: |
          chmod +x .github/scripts/wait_for_package.sh
          .github/scripts/wait_for_package.sh reown_core ${{ steps.get_version.outputs.version }}

      - name: Post a message in a channel
        uses: slackapi/slack-github-action@v2.1.0
        if: github.event.inputs.core == 'true'
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*reown_core* version ${{ steps.get_version.outputs.version }} has been published"

  publish-sign:
    name: Publish reown_sign
    needs: [publish-core]
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Check if sign should be published
        if: github.event.inputs.sign == 'false'
        run: |
          echo "Skipping reown_sign publishing because input was false."
        continue-on-error: false

      - name: Checkout code
        if: github.event.inputs.sign == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for git push

      - name: Set up Flutter
        if: github.event.inputs.sign == 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'

      - name: Install yq
        if: github.event.inputs.sign == 'true'
        run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Update reown_core dependency in reown_sign/pubspec.yaml
        if: github.event.inputs.sign == 'true' && github.event.inputs.core == 'true' && needs.publish-core.outputs.package_version != ''
        working-directory: packages/reown_sign
        run: |
          CORE_VERSION=${{ needs.publish-core.outputs.package_version }}
          echo "Updating reown_core dependency to ^$CORE_VERSION in reown_sign/pubspec.yaml"
          yq e ".dependencies.reown_core = \"^$CORE_VERSION\"" -i pubspec.yaml

      - name: Commit and push pubspec.yaml changes for reown_sign
        if: github.event.inputs.sign == 'true' && github.event.inputs.core == 'true' && needs.publish-core.outputs.package_version != ''
        env:
          GITHUB_TOKEN: ${{ secrets.REOWN_FLUTTER_RELEASE_PAT }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          cd packages/reown_sign
          # Check if there are changes to commit to prevent empty commits
          if [[ -n $(git status -s pubspec.yaml) ]]; then
            git add pubspec.yaml
            git commit -m "ci(reown_sign): Update reown_core to ^${{ needs.publish-core.outputs.package_version }} [skip ci]"
            git push
          else
            echo "No changes to commit in reown_sign/pubspec.yaml"
          fi

      - name: Get package version from reown_sign/pubspec.yaml
        if: github.event.inputs.sign == 'true'
        id: get_version
        working-directory: packages/reown_sign
        run: echo "version=$(yq e '.version' pubspec.yaml)" >> $GITHUB_OUTPUT

      - name: Configure pub.dev credentials
        if: github.event.inputs.sign == 'true'
        run: |
          mkdir -p $HOME/.config/dart
          echo '${{ secrets.PUB_CREDENTIALS }}' > $HOME/.config/dart/pub-credentials.json

      - name: Run generate_files.sh for reown_sign
        if: github.event.inputs.sign == 'true'
        working-directory: packages/reown_sign
        run: |
          chmod +x generate_files.sh
          sh ./generate_files.sh

      - name: Check Publish Warnings
        if: github.event.inputs.sign == 'true'
        shell: bash
        run: |
          set -o pipefail

          OUTPUT=$(flutter pub publish --dry-run 2>&1 || true)
          echo "$OUTPUT"

          if echo "$OUTPUT" | grep -iE "^Error:|validation.*error|validation.*failed"; then
            echo "❌ Real error(s) detected in pub publish dry-run"
            exit 1
          else
            echo "✅ No real errors, only warnings (e.g. missing CHANGELOG.md)"
          fi

      - name: Publish reown_sign to pub.dev
        if: github.event.inputs.sign == 'true'
        working-directory: packages/reown_sign
        run: flutter pub publish --force

      - name: Wait for reown_sign to be available on pub.dev
        if: github.event.inputs.sign == 'true'
        run: |
          chmod +x .github/scripts/wait_for_package.sh
          .github/scripts/wait_for_package.sh reown_sign ${{ steps.get_version.outputs.version }}

      - name: Post a message in a channel
        uses: slackapi/slack-github-action@v2.1.0
        if: github.event.inputs.sign == 'true'
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*reown_sign* version ${{ steps.get_version.outputs.version }} has been published"

  publish-appkit:
    name: Publish reown_appkit
    needs: [publish-core, publish-sign]
    runs-on: ubuntu-latest
    steps:
      - name: Check if appkit should be published
        if: github.event.inputs.appkit == 'false'
        run: |
          echo "Skipping reown_appkit publishing because input was false."
        continue-on-error: false

      - name: Checkout code
        if: github.event.inputs.appkit == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        if: github.event.inputs.appkit == 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'

      - name: Install yq
        if: github.event.inputs.appkit == 'true'
        run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Update dependencies in reown_appkit/pubspec.yaml
        if: github.event.inputs.appkit == 'true' && ((github.event.inputs.core == 'true' && needs.publish-core.outputs.package_version != '') || (github.event.inputs.sign == 'true' && needs.publish-sign.outputs.package_version != ''))
        working-directory: packages/reown_appkit
        env:
          CORE_VERSION: ${{ needs.publish-core.outputs.package_version }}
          SIGN_VERSION: ${{ needs.publish-sign.outputs.package_version }}
        run: |
          echo "Updating dependencies in reown_appkit/pubspec.yaml"
          # Update reown_core if it was published
          if [[ "${{ github.event.inputs.core }}" == 'true' && -n "$CORE_VERSION" ]]; then
            echo "Setting reown_core to ^$CORE_VERSION"
            yq e ".dependencies.reown_core = \"^$CORE_VERSION\"" -i pubspec.yaml
          fi
          # Update reown_sign if it was published (either by its own change or due to core change)
          if [[ ("${{ github.event.inputs.sign }}" == 'true' || "${{ github.event.inputs.core }}" == 'true') && -n "$SIGN_VERSION" ]]; then
            echo "Setting reown_sign to ^$SIGN_VERSION"
            yq e ".dependencies.reown_sign = \"^$SIGN_VERSION\"" -i pubspec.yaml
          fi

      - name: Commit and push pubspec.yaml changes for reown_appkit
        if: github.event.inputs.appkit == 'true' && ((github.event.inputs.core == 'true' && needs.publish-core.outputs.package_version != '') || (github.event.inputs.sign == 'true' && needs.publish-sign.outputs.package_version != ''))
        env:
          GITHUB_TOKEN: ${{ secrets.REOWN_FLUTTER_RELEASE_PAT }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          cd packages/reown_appkit
          if [[ -n $(git status -s pubspec.yaml) ]]; then
            git add pubspec.yaml
            git commit -m "ci(reown_appkit): Update core/sign dependencies [skip ci]"
            git push
          else
            echo "No changes to commit in reown_appkit/pubspec.yaml"
          fi

      - name: Get package version from reown_appkit/pubspec.yaml
        if: github.event.inputs.appkit == 'true'
        id: get_version
        working-directory: packages/reown_appkit
        run: echo "version=$(yq e '.version' pubspec.yaml)" >> $GITHUB_OUTPUT

      - name: Configure pub.dev credentials
        if: github.event.inputs.appkit == 'true'
        run: |
          mkdir -p $HOME/.config/dart
          echo '${{ secrets.PUB_CREDENTIALS }}' > $HOME/.config/dart/pub-credentials.json

      - name: Run generate_files.sh for reown_appkit
        if: github.event.inputs.appkit == 'true'
        working-directory: packages/reown_appkit
        run: |
          chmod +x generate_files.sh
          sh ./generate_files.sh

      - name: Check Publish Warnings
        if: github.event.inputs.appkit == 'true'
        shell: bash
        run: |
          set -o pipefail

          OUTPUT=$(flutter pub publish --dry-run 2>&1 || true)
          echo "$OUTPUT"

          if echo "$OUTPUT" | grep -iE "^Error:|validation.*error|validation.*failed"; then
            echo "❌ Real error(s) detected in pub publish dry-run"
            exit 1
          else
            echo "✅ No real errors, only warnings (e.g. missing CHANGELOG.md)"
          fi

      - name: Publish reown_appkit to pub.dev
        if: github.event.inputs.appkit == 'true'
        working-directory: packages/reown_appkit
        run: flutter pub publish --force

      - name: Post a message in a channel
        uses: slackapi/slack-github-action@v2.1.0
        if: github.event.inputs.appkit == 'true'
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*reown_appkit* version ${{ steps.get_version.outputs.version }} has been published"

  publish-walletkit:
    name: Publish reown_walletkit
    needs: [publish-core, publish-sign, publish-yttrium]
    runs-on: ubuntu-latest
    steps:
      - name: Check if walletkit should be published
        if: github.event.inputs.walletkit == 'false'
        run: |
          echo "Skipping reown_walletkit publishing because input was false."
        continue-on-error: false

      - name: Checkout code
        if: github.event.inputs.walletkit == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        if: github.event.inputs.walletkit == 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'

      - name: Install yq
        if: github.event.inputs.walletkit == 'true'
        run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Update dependencies in reown_walletkit/pubspec.yaml
        if: github.event.inputs.walletkit == 'true' && ((github.event.inputs.core == 'true' && needs.publish-core.outputs.package_version != '') || (github.event.inputs.sign == 'true' && needs.publish-sign.outputs.package_version != '') || (github.event.inputs.yttrium == 'true' && needs.publish-yttrium.outputs.package_version != ''))
        working-directory: packages/reown_walletkit
        env:
          CORE_VERSION: ${{ needs.publish-core.outputs.package_version }}
          SIGN_VERSION: ${{ needs.publish-sign.outputs.package_version }}
          YTTRIUM_VERSION: ${{ needs.publish-yttrium.outputs.package_version }}
        run: |
          echo "Updating dependencies in reown_walletkit/pubspec.yaml"
          if [[ "${{ github.event.inputs.core }}" == 'true' && -n "$CORE_VERSION" ]]; then
            echo "Setting reown_core to ^$CORE_VERSION"
            yq e ".dependencies.reown_core = \"^$CORE_VERSION\"" -i pubspec.yaml
          fi
          if [[ ("${{ github.event.inputs.sign }}" == 'true' || "${{ github.event.inputs.core }}" == 'true') && -n "$SIGN_VERSION" ]]; then
            echo "Setting reown_sign to ^$SIGN_VERSION"
            yq e ".dependencies.reown_sign = \"^$SIGN_VERSION\"" -i pubspec.yaml
          fi
          if [[ "${{ github.event.inputs.yttrium }}" == 'true' && -n "$YTTRIUM_VERSION" ]]; then
            echo "Setting reown_yttrium to ^$YTTRIUM_VERSION"
            yq e ".dependencies.reown_yttrium = \"^$YTTRIUM_VERSION\"" -i pubspec.yaml
          fi

      - name: Commit and push pubspec.yaml changes for reown_walletkit
        if: github.event.inputs.walletkit == 'true' && ((github.event.inputs.core == 'true' && needs.publish-core.outputs.package_version != '') || (github.event.inputs.sign == 'true' && needs.publish-sign.outputs.package_version != '') || (github.event.inputs.yttrium == 'true' && needs.publish-yttrium.outputs.package_version != ''))
        env:
          GITHUB_TOKEN: ${{ secrets.REOWN_FLUTTER_RELEASE_PAT }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          cd packages/reown_walletkit
          if [[ -n $(git status -s pubspec.yaml) ]]; then
            git add pubspec.yaml
            git commit -m "ci(reown_walletkit): Update core/sign/yttrium dependencies [skip ci]"
            git push
          else
            echo "No changes to commit in reown_walletkit/pubspec.yaml"
          fi

      - name: Get package version from reown_walletkit/pubspec.yaml
        if: github.event.inputs.walletkit == 'true'
        id: get_version
        working-directory: packages/reown_walletkit
        run: echo "version=$(yq e '.version' pubspec.yaml)" >> $GITHUB_OUTPUT

      - name: Configure pub.dev credentials
        if: github.event.inputs.walletkit == 'true'
        run: |
          mkdir -p $HOME/.config/dart
          echo '${{ secrets.PUB_CREDENTIALS }}' > $HOME/.config/dart/pub-credentials.json

      - name: Run generate_files.sh for reown_walletkit
        if: github.event.inputs.walletkit == 'true'
        working-directory: packages/reown_walletkit
        run: |
          chmod +x generate_files.sh
          sh ./generate_files.sh

      - name: Check Publish Warnings
        if: github.event.inputs.walletkit == 'true'
        shell: bash
        run: |
          set -o pipefail

          OUTPUT=$(flutter pub publish --dry-run 2>&1 || true)
          echo "$OUTPUT"

          if echo "$OUTPUT" | grep -iE "^Error:|validation.*error|validation.*failed"; then
            echo "❌ Real error(s) detected in pub publish dry-run"
            exit 1
          else
            echo "✅ No real errors, only warnings (e.g. missing CHANGELOG.md)"
          fi

      - name: Publish reown_walletkit to pub.dev
        if: github.event.inputs.walletkit == 'true'
        working-directory: packages/reown_walletkit
        run: flutter pub publish --force

      - name: Post a message in a channel
        uses: slackapi/slack-github-action@v2.1.0
        if: github.event.inputs.walletkit == 'true'
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*reown_walletkit* version ${{ steps.get_version.outputs.version }} has been published"

  publish-yttrium:
    name: Publish reown_yttrium
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Check if sign should be published
        if: github.event.inputs.yttrium == 'false'
        run: |
          echo "Skipping reown_yttrium publishing because input was false."
        continue-on-error: false

      - name: Checkout code
        if: github.event.inputs.yttrium == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for git push

      - name: Set up Flutter
        if: github.event.inputs.yttrium == 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'

      - name: Get package version from reown_yttrium/pubspec.yaml
        if: github.event.inputs.yttrium == 'true'
        id: get_version
        working-directory: packages/reown_yttrium
        run: echo "version=$(yq e '.version' pubspec.yaml)" >> $GITHUB_OUTPUT

      - name: Configure pub.dev credentials
        if: github.event.inputs.yttrium == 'true'
        run: |
          mkdir -p $HOME/.config/dart
          echo '${{ secrets.PUB_CREDENTIALS }}' > $HOME/.config/dart/pub-credentials.json

      - name: Run generate_files.sh for reown_yttrium
        if: github.event.inputs.yttrium == 'true'
        working-directory: packages/reown_yttrium
        run: |
          chmod +x generate_files.sh
          sh ./generate_files.sh

      - name: Check Publish Warnings
        if: github.event.inputs.yttrium == 'true'
        shell: bash
        run: |
          set -o pipefail

          OUTPUT=$(flutter pub publish --dry-run 2>&1 || true)
          echo "$OUTPUT"

          if echo "$OUTPUT" | grep -iE "^Error:|validation.*error|validation.*failed"; then
            echo "❌ Real error(s) detected in pub publish dry-run"
            exit 1
          else
            echo "✅ No real errors, only warnings (e.g. missing CHANGELOG.md)"
          fi

      - name: Publish reown_yttrium to pub.dev
        if: github.event.inputs.yttrium == 'true'
        working-directory: packages/reown_yttrium
        run: flutter pub publish --force

      - name: Wait for reown_yttrium to be available on pub.dev
        if: github.event.inputs.yttrium == 'true'
        run: |
          chmod +x .github/scripts/wait_for_package.sh
          .github/scripts/wait_for_package.sh reown_yttrium ${{ steps.get_version.outputs.version }}

      - name: Post a message in a channel
        uses: slackapi/slack-github-action@v2.1.0
        if: github.event.inputs.yttrium == 'true'
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*reown_yttrium* version ${{ steps.get_version.outputs.version }} has been published"

  publish-cli:
    name: Publish reown_cli
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Check if cli should be published
        if: github.event.inputs.cli == 'false'
        run: |
          echo "Skipping reown_cli publishing because input was false."
        continue-on-error: false

      - name: Checkout code
        if: github.event.inputs.cli == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for git push

      - name: Set up Flutter
        if: github.event.inputs.cli == 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'

      - name: Get package version from reown_cli/pubspec.yaml
        if: github.event.inputs.cli == 'true'
        id: get_version
        working-directory: packages/reown_cli
        run: echo "version=$(yq e '.version' pubspec.yaml)" >> $GITHUB_OUTPUT

      - name: Configure pub.dev credentials
        if: github.event.inputs.cli == 'true'
        run: |
          mkdir -p $HOME/.config/dart
          echo '${{ secrets.PUB_CREDENTIALS }}' > $HOME/.config/dart/pub-credentials.json

      - name: Run generate_files.sh for reown_cli
        if: github.event.inputs.cli == 'true'
        working-directory: packages/reown_cli
        run: |
          chmod +x generate_files.sh
          sh ./generate_files.sh

      - name: Check Publish Warnings
        if: github.event.inputs.cli == 'true'
        shell: bash
        run: |
          set -o pipefail

          OUTPUT=$(flutter pub publish --dry-run 2>&1 || true)
          echo "$OUTPUT"

          if echo "$OUTPUT" | grep -iE "^Error:|validation.*error|validation.*failed"; then
            echo "❌ Real error(s) detected in pub publish dry-run"
            exit 1
          else
            echo "✅ No real errors, only warnings (e.g. missing CHANGELOG.md)"
          fi

      - name: Publish reown_cli to pub.dev
        if: github.event.inputs.cli == 'true'
        working-directory: packages/reown_cli
        run: flutter pub publish --force

      - name: Wait for reown_cli to be available on pub.dev
        if: github.event.inputs.cli == 'true'
        run: |
          chmod +x .github/scripts/wait_for_package.sh
          .github/scripts/wait_for_package.sh reown_cli ${{ steps.get_version.outputs.version }}

      - name: Post a message in a channel
        uses: slackapi/slack-github-action@v2.1.0
        if: github.event.inputs.cli == 'true'
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*reown_cli* version ${{ steps.get_version.outputs.version }} has been published"

# Launch locally
# act --container-architecture linux/amd64 -P ubuntu-latest=-self-hosted --secret-file .github/workflows/.env.secret -W .github/workflows/publish-packages.yml workflow_dispatch
