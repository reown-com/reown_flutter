rust_root: "rust/" # rust code entry point relative to local path
rust_input: crate # meaning src/ folder inside rust/
dart_output: lib/generated/ # output path for generated Dart code
# c_output: bridge_generated.h
# duplicated_c_output: args.duplicated_c_output,
# rust_output: rust/src/bridge_generated.rs
# full_dep: true
web: false
# local: true
# stop_on_error: true
build_runner: true
dart_entrypoint_class_name: "YttriumDart"
dart_format_line_length: 80
# dart_preamble: args.dart_preamble,
# rust_preamble: args.rust_preamble,
# dart_enums_style: negative_bool_arg(args.no_dart_enums_style),
add_mod_to_lib: true
# llvm_path: args.llvm_path,
# llvm_compiler_opts: args.llvm_compiler_opts,
# dart_root: args.dart_root,
# extra_headers: args.extra_headers,
deps_check: true
dart3: true
# default_external_library_loader_web_prefix: args.default_external_library_loader_web_prefix,
# dart_type_rename: None, // complex type, not supported on command line yet
enable_lifetime: true
# type_64bit_int: positive_bool_arg(args.type_64bit_int),
# default_dart_async: negative_bool_arg(args.no_default_dart_async),
# dump: args.dump,
# dump_all: true
# rust_features: args.rust_features,